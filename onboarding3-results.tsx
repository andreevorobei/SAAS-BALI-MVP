import React, { useState, useEffect } from 'react';
import { 
  ArrowLeft, 
  ArrowRight, 
  Target, 
  TrendingUp, 
  Users, 
  DollarSign, 
  Star, 
  Sparkles,
  Brain,
  Heart,
  Zap,
  Shield,
  Rocket,
  Monitor,
  PieChart,
  Palette,
  Code,
  BarChart3,
  Eye,
  ChevronRight
} from 'lucide-react';

const OnboardingResults = () => {
  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤)
  const [userName] = useState("–ê–Ω–¥—Ä–µ–π");
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π
  const [isVisible, setIsVisible] = useState(false);
  const [showStrengths, setShowStrengths] = useState(false);
  const [showProfessions, setShowProfessions] = useState(false);

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  useEffect(() => {
    setIsVisible(true);
    setTimeout(() => setShowStrengths(true), 800);
    setTimeout(() => setShowProfessions(true), 1400);
  }, []);

  // –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
  const strengths = [
    {
      id: 1,
      name: "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
      description: "–£–º–µ–Ω–∏–µ –≤–∏–¥–µ—Ç—å –±–æ–ª—å—à—É—é –∫–∞—Ä—Ç–∏–Ω—É –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å",
      icon: Brain,
      color: "bg-blue-500"
    },
    {
      id: 2,
      name: "–†–∞–±–æ—Ç–∞ —Å –ª—é–¥—å–º–∏",
      description: "–û—Ç–ª–∏—á–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏",
      icon: Heart,
      color: "bg-red-500"
    },
    {
      id: 3,
      name: "–ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
      description: "–õ–µ–≥–∫–æ –æ—Å–≤–∞–∏–≤–∞–µ—Ç–µ –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      icon: Zap,
      color: "bg-purple-500"
    },
    {
      id: 4,
      name: "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º",
      description: "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥ –∫ —Å–ª–æ–∂–Ω—ã–º –∑–∞–¥–∞—á–∞–º",
      icon: Shield,
      color: "bg-green-500"
    },
    {
      id: 5,
      name: "–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å",
      description: "–õ—é–±–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ",
      icon: Rocket,
      color: "bg-orange-500"
    }
  ];

  // –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
  const professions = [
    {
      id: 1,
      name: "Product Manager",
      match: 92,
      description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–º –æ—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      salary: "$4,500 - $8,000",
      demand: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è",
      icon: Monitor,
      color: "from-blue-500 to-purple-600",
      skills: ["–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"]
    },
    {
      id: 2,
      name: "UX/UI Designer",
      match: 87,
      description: "–°–æ–∑–¥–∞–Ω–∏–µ —É–¥–æ–±–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      salary: "$3,200 - $6,500",
      demand: "–í—ã—Å–æ–∫–∞—è",
      icon: Palette,
      color: "from-pink-500 to-red-600",
      skills: ["–î–∏–∑–∞–π–Ω", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", "–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ", "–≠–º–ø–∞—Ç–∏—è"]
    },
    {
      id: 3,
      name: "Data Analyst",
      match: 78,
      description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏–π, —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –∏ –¥–∞—à–±–æ—Ä–¥–æ–≤",
      salary: "$2,800 - $5,500",
      demand: "–í—ã—Å–æ–∫–∞—è",
      icon: BarChart3,
      color: "from-green-500 to-blue-600",
      skills: ["–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "SQL", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"]
    },
    {
      id: 4,
      name: "Frontend Developer",
      match: 74,
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      salary: "$3,500 - $7,000",
      demand: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è",
      icon: Code,
      color: "from-purple-500 to-indigo-600",
      skills: ["JavaScript", "React", "HTML/CSS", "–õ–æ–≥–∏–∫–∞"]
    }
  ];

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  const goBack = () => {
    console.log('–í–æ–∑–≤—Ä–∞—Ç –∫ —ç–∫—Ä–∞–Ω—É –æ—Ü–µ–Ω–∫–∏');
  };

  const proceedToDetails = () => {
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –∏–∑—É—á–µ–Ω–∏—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–π');
  };

  const learnMore = (profession) => {
    console.log(`–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏: ${profession.name}`);
  };

  const showAllProfessions = () => {
    console.log('–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-white to-blue-50">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="w-full bg-white shadow-sm">
        <div className="max-w-6xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-gray-600 mb-2">
            <span>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</span>
            <span>3 –∏–∑ 5</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-2">
            <div 
              className="bg-gradient-to-r from-green-500 to-blue-600 h-2 rounded-full transition-all duration-1000 ease-out"
              style={{ width: '60%' }}
            ></div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-6xl mx-auto px-6 py-8">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className={`text-center mb-12 transition-all duration-1000 ${
          isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="flex items-center justify-between mb-6">
            <button
              onClick={goBack}
              className="p-3 hover:bg-white hover:shadow-md rounded-xl transition-all duration-200"
            >
              <ArrowLeft className="w-6 h-6 text-gray-600" />
            </button>
            <div className="flex-1"></div>
          </div>
          
          <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-green-500 to-blue-600 rounded-full mb-6">
            <Target className="w-10 h-10 text-white" />
          </div>
          
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            –¢–≤–æ–∏ –∏–¥–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –≥–æ—Ç–æ–≤—ã, {userName}! üéØ
          </h1>
          
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            Jess –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∞ —Ç–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –∏ –Ω–∞—à–ª–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç —Ç–≤–æ–∏–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º
          </p>
        </div>

        {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
        <div className={`mb-16 transition-all duration-1000 delay-300 ${
          showStrengths ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-2">–¢–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</h2>
            <p className="text-lg text-gray-600">–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤</p>
          </div>
          
          {/* –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä—è–¥ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
          <div className="overflow-x-auto pb-4">
            <div className="flex gap-6 min-w-max px-4">
              {strengths.map((strength, index) => (
                <div 
                  key={strength.id}
                  className={`bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-500 transform hover:scale-105 flex-shrink-0 w-64 ${
                    showStrengths ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
                  }`}
                  style={{ transitionDelay: `${400 + index * 100}ms` }}
                >
                  <div className={`w-14 h-14 ${strength.color} rounded-xl flex items-center justify-center mb-4`}>
                    <strength.icon className="w-7 h-7 text-white" />
                  </div>
                  <h3 className="font-bold text-lg text-gray-900 mb-3">{strength.name}</h3>
                  <p className="text-sm text-gray-600 leading-relaxed">{strength.description}</p>
                </div>
              ))}
            </div>
          </div>
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          <div className="flex justify-center mt-4 md:hidden">
            <div className="flex gap-2">
              {strengths.map((_, index) => (
                <div key={index} className="w-2 h-2 bg-gray-300 rounded-full"></div>
              ))}
            </div>
          </div>
        </div>

        {/* –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
        <div className={`transition-all duration-1000 delay-500 ${
          showProfessions ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-2">–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏</h2>
            <p className="text-lg text-gray-600">–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Å—Ç–µ–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è</p>
          </div>
          
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            {professions.map((profession, index) => (
              <div 
                key={profession.id}
                className={`bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-500 transform hover:scale-105 ${
                  showProfessions ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
                }`}
                style={{ transitionDelay: `${600 + index * 150}ms` }}
              >
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
                <div className="flex items-start justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <div className={`w-16 h-16 bg-gradient-to-r ${profession.color} rounded-2xl flex items-center justify-center`}>
                      <profession.icon className="w-8 h-8 text-white" />
                    </div>
                    <div>
                      <h3 className="text-2xl font-bold text-gray-900">{profession.name}</h3>
                      <div className="flex items-center gap-2 mt-1">
                        <div className="flex items-center gap-1">
                          <Sparkles className="w-4 h-4 text-green-500" />
                          <span className="text-green-600 font-semibold">{profession.match}% —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</span>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  {/* –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è */}
                  <div className="text-right">
                    <div className="text-3xl font-bold text-green-600">{profession.match}%</div>
                    <div className="w-16 bg-gray-200 rounded-full h-2 mt-1">
                      <div 
                        className="bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-1000"
                        style={{ width: `${profession.match}%` }}
                      ></div>
                    </div>
                  </div>
                </div>

                {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                <p className="text-gray-600 mb-6 leading-relaxed">
                  {profession.description}
                </p>

                {/* –ù–∞–≤—ã–∫–∏ */}
                <div className="mb-6">
                  <h4 className="font-semibold text-gray-900 mb-3">–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏:</h4>
                  <div className="flex flex-wrap gap-2">
                    {profession.skills.map((skill, skillIndex) => (
                      <span 
                        key={skillIndex}
                        className="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm font-medium"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>

                {/* –ó–∞—Ä–ø–ª–∞—Ç–∞ –∏ —Å–ø—Ä–æ—Å */}
                <div className="grid grid-cols-2 gap-4 mb-6">
                  <div className="bg-green-50 rounded-xl p-4">
                    <div className="flex items-center gap-2 mb-1">
                      <DollarSign className="w-4 h-4 text-green-600" />
                      <span className="text-sm font-medium text-green-800">–ó–∞—Ä–ø–ª–∞—Ç–∞</span>
                    </div>
                    <div className="font-bold text-green-900">{profession.salary}</div>
                  </div>
                  <div className="bg-blue-50 rounded-xl p-4">
                    <div className="flex items-center gap-2 mb-1">
                      <TrendingUp className="w-4 h-4 text-blue-600" />
                      <span className="text-sm font-medium text-blue-800">–°–ø—Ä–æ—Å</span>
                    </div>
                    <div className="font-bold text-blue-900">{profession.demand}</div>
                  </div>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ" */}
                <button
                  onClick={() => learnMore(profession)}
                  className={`w-full py-3 px-6 bg-gradient-to-r ${profession.color} text-white rounded-xl font-semibold hover:opacity-90 transition-all duration-200 flex items-center justify-center gap-2 group`}
                >
                  <Eye className="w-5 h-5" />
                  –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                  <ChevronRight className="w-4 h-4 group-hover:translate-x-1 transition-transform" />
                </button>
              </div>
            ))}
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <button
              onClick={showAllProfessions}
              className="px-8 py-4 bg-white text-gray-700 border-2 border-gray-300 rounded-xl font-semibold hover:bg-gray-50 hover:border-gray-400 transition-all duration-200 flex items-center gap-2"
            >
              <Target className="w-5 h-5" />
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
            </button>
            
            <button
              onClick={proceedToDetails}
              className="px-8 py-4 bg-gradient-to-r from-green-500 to-blue-600 text-white rounded-xl font-semibold hover:from-green-600 hover:to-blue-700 transition-all duration-200 flex items-center gap-2 shadow-lg hover:shadow-xl transform hover:scale-105"
            >
              –ò–∑—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ
              <ArrowRight className="w-5 h-5" />
            </button>
          </div>

          {/* –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π –±–ª–æ–∫ */}
          <div className="mt-12 bg-gradient-to-r from-green-100 to-blue-100 rounded-2xl p-8 text-center border border-green-200">
            <div className="flex items-center justify-center gap-2 mb-4">
              <Sparkles className="w-6 h-6 text-green-600" />
              <h3 className="text-xl font-bold text-gray-900">–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!</h3>
              <Sparkles className="w-6 h-6 text-blue-600" />
            </div>
            <p className="text-gray-700 leading-relaxed max-w-2xl mx-auto">
              –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–∫–∞–∑–∞–ª–∏ –≤—ã—Å–æ–∫—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ç–æ–ø–æ–≤—ã–º–∏ IT-–ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º–∏. 
              –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –∏–∑—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è. 
              Jess –ø–æ–º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω! üöÄ
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OnboardingResults;