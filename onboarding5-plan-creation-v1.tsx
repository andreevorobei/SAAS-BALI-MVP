import React, { useState, useEffect } from 'react';
import { 
  ArrowLeft, 
  Rocket,
  CheckCircle,
  Target,
  Monitor,
  Calendar,
  Users,
  Code,
  TrendingUp,
  Star,
  Settings,
  Play,
  Sparkles,
  Brain,
  Heart,
  Zap,
  Shield,
  Award,
  BookOpen,
  MessageCircle,
  Briefcase,
  Clock
} from 'lucide-react';

const OnboardingPlanCreation = () => {
  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤)
  const [userName] = useState("–ê–Ω–¥—Ä–µ–π");
  const [userGoal] = useState("–°—Ç–∞—Ç—å —Ç–æ–ø–æ–≤—ã–º Product Manager –∏ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –≤ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–º —Å—Ç–∞—Ä—Ç–∞–ø–µ —Å –∑–ø –æ—Ç 5000$ –≤ –º–µ—Å—è—Ü");
  
  // –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞)
  const [selectedProfession] = useState({
    name: "Product Manager",
    match: 92,
    icon: Monitor,
    color: "from-blue-500 to-purple-600"
  });

  // –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [userStrengths] = useState([
    { name: "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", icon: Brain },
    { name: "–†–∞–±–æ—Ç–∞ —Å –ª—é–¥—å–º–∏", icon: Heart },
    { name: "–ë—ã—Å—Ç—Ä–æ–µ –æ–±—É—á–µ–Ω–∏–µ", icon: Zap },
    { name: "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º", icon: Shield }
  ]);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π –ø–ª–∞–Ω–∞
  const [isVisible, setIsVisible] = useState(false);
  const [showPlan, setShowPlan] = useState(false);
  const [planModifications, setPlanModifications] = useState([]);
  const [isGeneratingPlan, setIsGeneratingPlan] = useState(false);

  // –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è
  const [developmentPlan, setDevelopmentPlan] = useState([
    {
      id: 1,
      title: "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å LinkedIn",
      description: "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ Product Management",
      duration: "1 –Ω–µ–¥–µ–ª—è",
      priority: "high",
      tasks: [
        "–ù–∞–ø–∏—Å–∞—Ç—å —Ü–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫",
        "–û–±–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã", 
        "–î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ PM",
        "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ"
      ],
      category: "personal_brand"
    },
    {
      id: 2,
      title: "–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã Product Management",
      description: "–û—Å–≤–æ–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã Product Manager",
      duration: "2 –º–µ—Å—è—Ü–∞",
      priority: "high",
      tasks: [
        "–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å 'Product Management Fundamentals'",
        "–ò–∑—É—á–∏—Ç—å –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ RICE, ICE, Kano",
        "–û—Å–≤–æ–∏—Ç—å –æ—Å–Ω–æ–≤—ã SQL –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏",
        "–ü–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—ã UX/UI –¥–∏–∑–∞–π–Ω–∞"
      ],
      category: "skills"
    },
    {
      id: 3,
      title: "–°–æ–∑–¥–∞—Ç—å –ø–µ—Ç-–ø—Ä–æ–µ–∫—Ç",
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–≤—ã–∫–æ–≤",
      duration: "1.5 –º–µ—Å—è—Ü–∞",
      priority: "medium",
      tasks: [
        "–í—ã–±—Ä–∞—Ç—å –∏–¥–µ—é –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é",
        "–°–æ–∑–¥–∞—Ç—å MVP —Å –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤",
        "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏"
      ],
      category: "experience"
    },
    {
      id: 4,
      title: "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫–∏ –≤ —Å—Ç–∞—Ä—Ç–∞–ø—ã",
      description: "–ù–∞–π—Ç–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–±–æ—Ç—É Product Manager –≤ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–º —Å—Ç–∞—Ä—Ç–∞–ø–µ",
      duration: "2 –º–µ—Å—è—Ü–∞",
      priority: "high",
      tasks: [
        "–ù–∞–π—Ç–∏ 50 –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π",
        "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—é–º–µ –∏ cover letter",
        "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ case interview",
        "–ü—Ä–æ–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ñ—Ñ–µ—Ä"
      ],
      category: "job_search"
    }
  ]);

  // –û–ø—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∞
  const modificationOptions = [
    {
      id: "technical",
      title: "–ë–æ–ª—å—à–µ —Ñ–æ–∫—É—Å–∞ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–∞–∑–≤–∏—Ç–∏–∏",
      description: "–î–æ–±–∞–≤–∏—Ç—å –∏–∑—É—á–µ–Ω–∏–µ SQL, API, –æ—Å–Ω–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
      icon: Code,
      modifications: ["–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ SQL", "–û—Å–Ω–æ–≤—ã Python –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", "–ü–æ–Ω–∏–º–∞–Ω–∏–µ REST API"]
    },
    {
      id: "networking",
      title: "–î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–∞",
      description: "–í–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π",
      icon: Users,
      modifications: ["–£—á–∞—Å—Ç–∏–µ –≤ Product meetups", "–ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –æ—Ç senior PM", "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ PM —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö"]
    },
    {
      id: "job_search",
      title: "–£—Å–∫–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã",
      description: "–ò–Ω—Ç–µ–Ω—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫",
      icon: Briefcase,
      modifications: ["–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫", "–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞–º–∏", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∏–Ω—Ç–µ—Ä–≤—å—é"]
    }
  ];

  // –ê–Ω–∏–º–∞—Ü–∏–∏
  useEffect(() => {
    setIsVisible(true);
    setTimeout(() => setShowPlan(true), 1000);
  }, []);

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞
  const toggleModification = (optionId) => {
    if (planModifications.includes(optionId)) {
      setPlanModifications(prev => prev.filter(id => id !== optionId));
    } else {
      setPlanModifications(prev => [...prev, optionId]);
    }
  };

  const regeneratePlan = () => {
    setIsGeneratingPlan(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞–Ω–∞
    setTimeout(() => {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
      console.log('–ü–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏:', planModifications);
      setIsGeneratingPlan(false);
    }, 2000);
  };

  const startJourney = () => {
    console.log('–ù–∞—á–∞–ª–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è!', {
      user: userName,
      profession: selectedProfession.name,
      goal: userGoal,
      plan: developmentPlan,
      modifications: planModifications
    });
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –¥–∞—à–±–æ—Ä–¥—É
  };

  const goBack = () => {
    console.log('–í–æ–∑–≤—Ä–∞—Ç –∫ –∏–∑—É—á–µ–Ω–∏—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–π');
  };

  const getPriorityColor = (priority) => {
    switch (priority) {
      case 'high': return 'bg-red-100 text-red-800 border-red-200';
      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'low': return 'bg-green-100 text-green-800 border-green-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getCategoryIcon = (category) => {
    switch (category) {
      case 'personal_brand': return Users;
      case 'skills': return BookOpen;
      case 'experience': return Star;
      case 'job_search': return Briefcase;
      default: return Target;
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-50 via-white to-blue-50">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="w-full bg-white shadow-sm">
        <div className="max-w-6xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between text-sm text-gray-600 mb-2">
            <span>–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∞</span>
            <span>5 –∏–∑ 5</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-2">
            <div 
              className="bg-gradient-to-r from-emerald-500 to-blue-600 h-2 rounded-full transition-all duration-1000 ease-out"
              style={{ width: '100%' }}
            ></div>
          </div>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-6 py-8">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className={`text-center mb-12 transition-all duration-1000 ${
          isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="flex items-center justify-between mb-6">
            <button
              onClick={goBack}
              className="p-3 hover:bg-white hover:shadow-md rounded-xl transition-all duration-200"
            >
              <ArrowLeft className="w-6 h-6 text-gray-600" />
            </button>
            <div className="flex-1"></div>
          </div>
          
          <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-emerald-500 to-blue-600 rounded-full mb-6">
            <Rocket className="w-10 h-10 text-white" />
          </div>
          
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            –°–æ–∑–¥–∞–µ–º —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, {userName}! üöÄ
          </h1>
          
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ Jess —Å–æ—Å—Ç–∞–≤–∏–ª–∞ –ø–ª–∞–Ω –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
          </p>
        </div>

        {/* –†–µ–∑—é–º–µ –≤—ã–±–æ—Ä–∞ */}
        <div className={`mb-12 transition-all duration-1000 delay-300 ${
          isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="bg-white rounded-2xl p-8 shadow-lg border border-gray-100">
            <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">–†–µ–∑—é–º–µ —Ç–≤–æ–µ–≥–æ –≤—ã–±–æ—Ä–∞</h2>
            
            <div className="grid grid-cols-3 gap-4 sm:gap-8">
              
              {/* –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è */}
              <div className="text-center">
                <div className={`w-16 h-16 bg-gradient-to-r ${selectedProfession.color} rounded-2xl flex items-center justify-center mx-auto mb-4`}>
                  <selectedProfession.icon className="w-8 h-8 text-white" />
                </div>
                <h3 className="font-bold text-lg text-gray-900 mb-2">–í—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è</h3>
                <p className="text-gray-600">{selectedProfession.name}</p>
                <div className="flex items-center justify-center gap-1 mt-2">
                  <Sparkles className="w-4 h-4 text-green-500" />
                  <span className="text-green-600 font-semibold">{selectedProfession.match}% —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</span>
                </div>
              </div>

              {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
                  <Award className="w-8 h-8 text-white" />
                </div>
                <h3 className="font-bold text-lg text-gray-900 mb-2">–¢–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</h3>
                <div className="space-y-1">
                  {userStrengths.map((strength, index) => (
                    <div key={index} className="flex items-center justify-center gap-2 text-gray-600">
                      <strength.icon className="w-4 h-4" />
                      <span className="text-sm">{strength.name}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* –¶–µ–ª—å */}
              <div className="text-center">
                <div className="w-16 h-16 bg-gradient-to-r from-orange-500 to-red-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
                  <Target className="w-8 h-8 text-white" />
                </div>
                <h3 className="font-bold text-lg text-gray-900 mb-2">–¢–≤–æ—è —Ü–µ–ª—å</h3>
                <p className="text-gray-600 text-sm leading-relaxed">{userGoal}</p>
              </div>
            </div>
          </div>
        </div>

        {/* –ü–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è */}
        <div className={`mb-12 transition-all duration-1000 delay-500 ${
          showPlan ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-gray-900 mb-2">–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è</h2>
            <p className="text-lg text-gray-600">4 –∫–ª—é—á–µ–≤—ã—Ö —ç—Ç–∞–ø–∞ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏</p>
          </div>

          <div className="space-y-6">
            {developmentPlan.map((milestone, index) => {
              const CategoryIcon = getCategoryIcon(milestone.category);
              return (
                <div 
                  key={milestone.id}
                  className={`bg-white rounded-2xl p-6 shadow-lg border border-gray-100 transition-all duration-500 hover:shadow-xl ${
                    showPlan ? 'translate-x-0 opacity-100' : 'translate-x-8 opacity-0'
                  }`}
                  style={{ transitionDelay: `${600 + index * 200}ms` }}
                >
                  <div className="flex items-start gap-6">
                    
                    {/* –ù–æ–º–µ—Ä —ç—Ç–∞–ø–∞ */}
                    <div className="flex-shrink-0">
                      <div className="w-12 h-12 bg-gradient-to-r from-emerald-500 to-blue-600 rounded-full flex items-center justify-center text-white font-bold text-lg">
                        {index + 1}
                      </div>
                    </div>

                    {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                    <div className="flex-1">
                      <div className="flex items-start justify-between mb-4">
                        <div>
                          <h3 className="text-xl font-bold text-gray-900 mb-2">{milestone.title}</h3>
                          <p className="text-gray-600 mb-3">{milestone.description}</p>
                          
                          <div className="flex items-center gap-4 text-sm">
                            <div className="flex items-center gap-1">
                              <Clock className="w-4 h-4 text-blue-500" />
                              <span className="text-gray-600">{milestone.duration}</span>
                            </div>
                            <div className="flex items-center gap-1">
                              <CategoryIcon className="w-4 h-4 text-purple-500" />
                              <span className="text-gray-600 capitalize">{milestone.category.replace('_', ' ')}</span>
                            </div>
                          </div>
                        </div>
                        
                        <div className={`px-3 py-1 rounded-full text-xs font-medium border ${getPriorityColor(milestone.priority)}`}>
                          {milestone.priority === 'high' ? '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : 
                           milestone.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : '–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'}
                        </div>
                      </div>

                      {/* –ó–∞–¥–∞—á–∏ */}
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-3">–ö–ª—é—á–µ–≤—ã–µ –∑–∞–¥–∞—á–∏:</h4>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                          {milestone.tasks.map((task, taskIndex) => (
                            <div key={taskIndex} className="flex items-start gap-2">
                              <CheckCircle className="w-4 h-4 text-green-500 flex-shrink-0 mt-0.5" />
                              <span className="text-gray-700 text-sm">{task}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {/* –û–ø—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ */}
        <div className={`mb-12 transition-all duration-1000 delay-700 ${
          showPlan ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8 border border-blue-100">
            <div className="text-center mb-8">
              <h2 className="text-2xl font-bold text-gray-900 mb-2 flex items-center justify-center gap-2">
                <Settings className="w-6 h-6 text-blue-600" />
                –•–æ—á–µ—à—å —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω?
              </h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ–∫—É—Å—ã –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏</p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
              {modificationOptions.map((option) => (
                <button
                  key={option.id}
                  onClick={() => toggleModification(option.id)}
                  className={`p-6 rounded-xl border-2 transition-all duration-200 text-left ${
                    planModifications.includes(option.id)
                      ? 'border-blue-500 bg-blue-50 shadow-md'
                      : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'
                  }`}
                >
                  <div className="flex items-start gap-4">
                    <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${
                      planModifications.includes(option.id)
                        ? 'bg-blue-500 text-white'
                        : 'bg-gray-100 text-gray-600'
                    }`}>
                      <option.icon className="w-6 h-6" />
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 mb-2">{option.title}</h3>
                      <p className="text-sm text-gray-600 mb-3">{option.description}</p>
                      
                      {planModifications.includes(option.id) && (
                        <div className="space-y-1">
                          {option.modifications.map((mod, index) => (
                            <div key={index} className="flex items-center gap-2 text-xs text-blue-700">
                              <div className="w-1.5 h-1.5 bg-blue-500 rounded-full"></div>
                              {mod}
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                    
                    {planModifications.includes(option.id) && (
                      <CheckCircle className="w-5 h-5 text-blue-500 flex-shrink-0" />
                    )}
                  </div>
                </button>
              ))}
            </div>

            {planModifications.length > 0 && (
              <div className="text-center">
                <button
                  onClick={regeneratePlan}
                  disabled={isGeneratingPlan}
                  className="px-6 py-3 bg-blue-500 text-white rounded-xl font-semibold hover:bg-blue-600 disabled:opacity-50 transition-all duration-200 flex items-center gap-2 mx-auto"
                >
                  {isGeneratingPlan ? (
                    <>
                      <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                      –û–±–Ω–æ–≤–ª—è–µ–º –ø–ª–∞–Ω...
                    </>
                  ) : (
                    <>
                      <Settings className="w-4 h-4" />
                      –û–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω
                    </>
                  )}
                </button>
              </div>
            )}
          </div>
        </div>

        {/* –§–∏–Ω–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
        <div className={`text-center transition-all duration-1000 delay-900 ${
          showPlan ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="bg-white rounded-2xl p-8 shadow-lg border border-gray-100">
            <div className="max-w-2xl mx-auto">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?</h2>
              <p className="text-gray-600 mb-8">
                –¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –≥–æ—Ç–æ–≤! Jess –±—É–¥–µ—Ç —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å —Ç–µ–±—è –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ, 
                –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫ —Ü–µ–ª–∏.
              </p>
              
              <button
                onClick={startJourney}
                className="px-12 py-4 bg-gradient-to-r from-emerald-500 to-blue-600 text-white rounded-xl font-bold text-lg hover:from-emerald-600 hover:to-blue-700 transition-all duration-300 flex items-center gap-3 mx-auto shadow-lg hover:shadow-xl transform hover:scale-105"
              >
                <Play className="w-6 h-6" />
                –ù–∞—á–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!
                <Rocket className="w-6 h-6" />
              </button>
              
              <div className="flex items-center justify-center gap-6 mt-6 text-sm text-gray-500">
                <div className="flex items-center gap-1">
                  <Target className="w-4 h-4 text-emerald-500" />
                  –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω
                </div>
                <div className="flex items-center gap-1">
                  <MessageCircle className="w-4 h-4 text-blue-500" />
                  –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Jess 24/7
                </div>
                <div className="flex items-center gap-1">
                  <TrendingUp className="w-4 h-4 text-purple-500" />
                  –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OnboardingPlanCreation;